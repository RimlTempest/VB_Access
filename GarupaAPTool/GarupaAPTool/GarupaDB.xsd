<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GarupaDB" targetNamespace="http://tempuri.org/GarupaDB.xsd" xmlns:mstns="http://tempuri.org/GarupaDB.xsd" xmlns="http://tempuri.org/GarupaDB.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="Garupa" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Garupa (MySettings)" PropertyReference="ApplicationSettings.GarupaAPTool.My.MySettings.GlobalReference.Default.Garupa" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BandsTableAdapter" GeneratorDataComponentClassName="BandsTableAdapter" Name="Bands" UserDataComponentName="BandsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Garupa (MySettings)" DbObjectName="Bands" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Bands` WHERE ((`BandD` = ?) AND ((? = 1 AND `BandName` IS NULL) OR (`BandName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandD" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandD" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_BandName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Bands` (`BandName`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="BandName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BandD, BandName FROM Bands</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Bands` SET `BandName` = ? WHERE ((`BandD` = ?) AND ((? = 1 AND `BandName` IS NULL) OR (`BandName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="BandName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandD" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandD" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_BandName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="BandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BandD" DataSetColumn="BandD" />
              <Mapping SourceColumn="BandName" DataSetColumn="BandName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MemberTableAdapter" GeneratorDataComponentClassName="MemberTableAdapter" Name="Member" UserDataComponentName="MemberTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Garupa (MySettings)" DbObjectName="Member" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Member` WHERE ((`MemberID` = ?) AND ((? = 1 AND `MemberName` IS NULL) OR (`MemberName` = ?)) AND ((? = 1 AND `BandID` IS NULL) OR (`BandID` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_MemberID" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_MemberName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_MemberName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Member` (`MemberID`, `MemberName`, `BandID`) VALUES (?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MemberID" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MemberName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MemberID, MemberName, BandID FROM Member</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Member` SET `MemberID` = ?, `MemberName` = ?, `BandID` = ? WHERE ((`MemberID` = ?) AND ((? = 1 AND `MemberName` IS NULL) OR (`MemberName` = ?)) AND ((? = 1 AND `BandID` IS NULL) OR (`BandID` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MemberID" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MemberName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_MemberID" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_MemberName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_MemberName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="MemberName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MemberID" DataSetColumn="MemberID" />
              <Mapping SourceColumn="MemberName" DataSetColumn="MemberName" />
              <Mapping SourceColumn="BandID" DataSetColumn="BandID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScoreTableAdapter" GeneratorDataComponentClassName="ScoreTableAdapter" Name="Score" UserDataComponentName="ScoreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Garupa (MySettings)" DbObjectName="Score" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Score` WHERE ((`ScoreID` = ?) AND ((? = 1 AND `BandID` IS NULL) OR (`BandID` = ?)) AND ((? = 1 AND `Level` IS NULL) OR (`Level` = ?)) AND ((? = 1 AND `LevelNum` IS NULL) OR (`LevelNum` = ?)) AND ((? = 1 AND `Count` IS NULL) OR (`Count` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ScoreID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ScoreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Level" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Level" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Score` (`BandID`, `MusicName`, `Level`, `LevelNum`, `Count`) VALUES (?, ?, ?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MusicName" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="MusicName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Level" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScoreID, BandID, MusicName, [Level], LevelNum, [Count] FROM Score</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Score` SET `BandID` = ?, `MusicName` = ?, `Level` = ?, `LevelNum` = ?, `Count` = ? WHERE ((`ScoreID` = ?) AND ((? = 1 AND `BandID` IS NULL) OR (`BandID` = ?)) AND ((? = 1 AND `Level` IS NULL) OR (`Level` = ?)) AND ((? = 1 AND `LevelNum` IS NULL) OR (`LevelNum` = ?)) AND ((? = 1 AND `Count` IS NULL) OR (`Count` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="MusicName" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="MusicName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Level" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ScoreID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ScoreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_BandID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="BandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Level" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Level" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_LevelNum" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="LevelNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Count" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScoreID" DataSetColumn="ScoreID" />
              <Mapping SourceColumn="BandID" DataSetColumn="BandID" />
              <Mapping SourceColumn="MusicName" DataSetColumn="MusicName" />
              <Mapping SourceColumn="Level" DataSetColumn="Level" />
              <Mapping SourceColumn="LevelNum" DataSetColumn="LevelNum" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Q_ScoreTableAdapter" GeneratorDataComponentClassName="Q_ScoreTableAdapter" Name="Q_Score" UserDataComponentName="Q_ScoreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Garupa (MySettings)" DbObjectName="Q_Score" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BandName, MusicName, [Level], LevelNum, [Count] FROM Q_Score</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BandName" DataSetColumn="BandName" />
              <Mapping SourceColumn="MusicName" DataSetColumn="MusicName" />
              <Mapping SourceColumn="Level" DataSetColumn="Level" />
              <Mapping SourceColumn="LevelNum" DataSetColumn="LevelNum" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GarupaDB" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GarupaDB" msprop:Generator_UserDSName="GarupaDB">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Bands" msprop:Generator_TableClassName="BandsDataTable" msprop:Generator_TableVarName="tableBands" msprop:Generator_TablePropName="Bands" msprop:Generator_RowDeletingName="BandsRowDeleting" msprop:Generator_RowChangingName="BandsRowChanging" msprop:Generator_RowEvHandlerName="BandsRowChangeEventHandler" msprop:Generator_RowDeletedName="BandsRowDeleted" msprop:Generator_UserTableName="Bands" msprop:Generator_RowChangedName="BandsRowChanged" msprop:Generator_RowEvArgName="BandsRowChangeEvent" msprop:Generator_RowClassName="BandsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BandD" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnBandD" msprop:Generator_ColumnPropNameInRow="BandD" msprop:Generator_ColumnPropNameInTable="BandDColumn" msprop:Generator_UserColumnName="BandD" type="xs:int" />
              <xs:element name="BandName" msprop:Generator_ColumnVarNameInTable="columnBandName" msprop:Generator_ColumnPropNameInRow="BandName" msprop:Generator_ColumnPropNameInTable="BandNameColumn" msprop:Generator_UserColumnName="BandName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Member" msprop:Generator_TableClassName="MemberDataTable" msprop:Generator_TableVarName="tableMember" msprop:Generator_TablePropName="Member" msprop:Generator_RowDeletingName="MemberRowDeleting" msprop:Generator_RowChangingName="MemberRowChanging" msprop:Generator_RowEvHandlerName="MemberRowChangeEventHandler" msprop:Generator_RowDeletedName="MemberRowDeleted" msprop:Generator_UserTableName="Member" msprop:Generator_RowChangedName="MemberRowChanged" msprop:Generator_RowEvArgName="MemberRowChangeEvent" msprop:Generator_RowClassName="MemberRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MemberID" msprop:Generator_ColumnVarNameInTable="columnMemberID" msprop:Generator_ColumnPropNameInRow="MemberID" msprop:Generator_ColumnPropNameInTable="MemberIDColumn" msprop:Generator_UserColumnName="MemberID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MemberName" msprop:Generator_ColumnVarNameInTable="columnMemberName" msprop:Generator_ColumnPropNameInRow="MemberName" msprop:Generator_ColumnPropNameInTable="MemberNameColumn" msprop:Generator_UserColumnName="MemberName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BandID" msprop:Generator_ColumnVarNameInTable="columnBandID" msprop:Generator_ColumnPropNameInRow="BandID" msprop:Generator_ColumnPropNameInTable="BandIDColumn" msprop:Generator_UserColumnName="BandID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Score" msprop:Generator_TableClassName="ScoreDataTable" msprop:Generator_TableVarName="tableScore" msprop:Generator_TablePropName="Score" msprop:Generator_RowDeletingName="ScoreRowDeleting" msprop:Generator_RowChangingName="ScoreRowChanging" msprop:Generator_RowEvHandlerName="ScoreRowChangeEventHandler" msprop:Generator_RowDeletedName="ScoreRowDeleted" msprop:Generator_UserTableName="Score" msprop:Generator_RowChangedName="ScoreRowChanged" msprop:Generator_RowEvArgName="ScoreRowChangeEvent" msprop:Generator_RowClassName="ScoreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScoreID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnScoreID" msprop:Generator_ColumnPropNameInRow="ScoreID" msprop:Generator_ColumnPropNameInTable="ScoreIDColumn" msprop:Generator_UserColumnName="ScoreID" type="xs:int" />
              <xs:element name="BandID" msprop:Generator_ColumnVarNameInTable="columnBandID" msprop:Generator_ColumnPropNameInRow="BandID" msprop:Generator_ColumnPropNameInTable="BandIDColumn" msprop:Generator_UserColumnName="BandID" type="xs:int" minOccurs="0" />
              <xs:element name="MusicName" msprop:Generator_ColumnVarNameInTable="columnMusicName" msprop:Generator_ColumnPropNameInRow="MusicName" msprop:Generator_ColumnPropNameInTable="MusicNameColumn" msprop:Generator_UserColumnName="MusicName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Level" msprop:Generator_ColumnVarNameInTable="columnLevel" msprop:Generator_ColumnPropNameInRow="Level" msprop:Generator_ColumnPropNameInTable="LevelColumn" msprop:Generator_UserColumnName="Level" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelNum" msprop:Generator_ColumnVarNameInTable="columnLevelNum" msprop:Generator_ColumnPropNameInRow="LevelNum" msprop:Generator_ColumnPropNameInTable="LevelNumColumn" msprop:Generator_UserColumnName="LevelNum" type="xs:int" minOccurs="0" />
              <xs:element name="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnPropNameInTable="CountColumn" msprop:Generator_UserColumnName="Count" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Q_Score" msprop:Generator_TableClassName="Q_ScoreDataTable" msprop:Generator_TableVarName="tableQ_Score" msprop:Generator_TablePropName="Q_Score" msprop:Generator_RowDeletingName="Q_ScoreRowDeleting" msprop:Generator_RowChangingName="Q_ScoreRowChanging" msprop:Generator_RowEvHandlerName="Q_ScoreRowChangeEventHandler" msprop:Generator_RowDeletedName="Q_ScoreRowDeleted" msprop:Generator_UserTableName="Q_Score" msprop:Generator_RowChangedName="Q_ScoreRowChanged" msprop:Generator_RowEvArgName="Q_ScoreRowChangeEvent" msprop:Generator_RowClassName="Q_ScoreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BandName" msprop:Generator_ColumnVarNameInTable="columnBandName" msprop:Generator_ColumnPropNameInRow="BandName" msprop:Generator_ColumnPropNameInTable="BandNameColumn" msprop:Generator_UserColumnName="BandName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MusicName" msprop:Generator_ColumnVarNameInTable="columnMusicName" msprop:Generator_ColumnPropNameInRow="MusicName" msprop:Generator_ColumnPropNameInTable="MusicNameColumn" msprop:Generator_UserColumnName="MusicName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Level" msprop:Generator_ColumnVarNameInTable="columnLevel" msprop:Generator_ColumnPropNameInRow="Level" msprop:Generator_ColumnPropNameInTable="LevelColumn" msprop:Generator_UserColumnName="Level" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelNum" msprop:Generator_ColumnVarNameInTable="columnLevelNum" msprop:Generator_ColumnPropNameInRow="LevelNum" msprop:Generator_ColumnPropNameInTable="LevelNumColumn" msprop:Generator_UserColumnName="LevelNum" type="xs:int" minOccurs="0" />
              <xs:element name="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnPropNameInTable="CountColumn" msprop:Generator_UserColumnName="Count" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Bands" />
      <xs:field xpath="mstns:BandD" />
    </xs:unique>
    <xs:unique name="Member_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Member" />
      <xs:field xpath="mstns:MemberID" />
    </xs:unique>
    <xs:unique name="Score_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Score" />
      <xs:field xpath="mstns:ScoreID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="BandsMember" msdata:parent="Bands" msdata:child="Member" msdata:parentkey="BandD" msdata:childkey="BandID" msprop:Generator_UserChildTable="Member" msprop:Generator_ChildPropName="GetMemberRows" msprop:Generator_UserRelationName="BandsMember" msprop:Generator_ParentPropName="BandsRow" msprop:Generator_RelationVarName="relationBandsMember" msprop:Generator_UserParentTable="Bands" />
      <msdata:Relationship name="BandsScore" msdata:parent="Bands" msdata:child="Score" msdata:parentkey="BandD" msdata:childkey="BandID" msprop:Generator_UserChildTable="Score" msprop:Generator_ChildPropName="GetScoreRows" msprop:Generator_UserRelationName="BandsScore" msprop:Generator_ParentPropName="BandsRow" msprop:Generator_RelationVarName="relationBandsScore" msprop:Generator_UserParentTable="Bands" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>